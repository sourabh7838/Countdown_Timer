// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const media_query = flutter_sdk.src__widgets__media_query;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const basic = flutter_sdk.src__widgets__basic;
  const icon$ = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const icon_button = flutter_sdk.src__material__icon_button;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const box = flutter_sdk.src__rendering__box;
  const flex = flutter_sdk.src__rendering__flex;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const colors = flutter_sdk.src__material__colors;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const popup_menu = flutter_sdk.src__material__popup_menu;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const divider = flutter_sdk.src__material__divider;
  const ink_well = flutter_sdk.src__material__ink_well;
  const box_border = flutter_sdk.src__painting__box_border;
  const basic_types = flutter_sdk.src__painting__basic_types;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const dialog = flutter_sdk.src__material__dialog;
  const navigator = flutter_sdk.src__widgets__navigator;
  const text_button = flutter_sdk.src__material__text_button;
  const icons = flutter_sdk.src__material__icons;
  const $switch = flutter_sdk.src__material__switch;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const scroll_physics = flutter_sdk.src__widgets__scroll_physics;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const key = flutter_sdk.src__foundation__key;
  const list_tile = flutter_sdk.src__material__list_tile;
  const spacer = flutter_sdk.src__widgets__spacer;
  const page = flutter_sdk.src__material__page;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $modulo = dartx['%'];
  var $truncate = dartx.truncate;
  var $padLeft = dartx.padLeft;
  var $_get = dartx._get;
  var $isNotEmpty = dartx.isNotEmpty;
  var $addAll = dartx.addAll;
  var $add = dartx.add;
  var $removeAt = dartx.removeAt;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $fold = dartx.fold;
  var $removeWhere = dartx.removeWhere;
  var $clear = dartx.clear;
  var $length = dartx.length;
  var $where = dartx.where;
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfTask: () => (T.JSArrayOfTask = dart.constFn(_interceptors.JSArray$(main.Task)))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    TimerTovoid: () => (T.TimerTovoid = dart.constFn(dart.fnType(dart.void, [async.Timer])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    PopupMenuButtonOfString: () => (T.PopupMenuButtonOfString = dart.constFn(popup_menu.PopupMenuButton$(core.String)))(),
    PopupMenuItemOfString: () => (T.PopupMenuItemOfString = dart.constFn(popup_menu.PopupMenuItem$(core.String)))(),
    PopupMenuEntryOfString: () => (T.PopupMenuEntryOfString = dart.constFn(popup_menu.PopupMenuEntry$(core.String)))(),
    JSArrayOfPopupMenuEntryOfString: () => (T.JSArrayOfPopupMenuEntryOfString = dart.constFn(_interceptors.JSArray$(T.PopupMenuEntryOfString())))(),
    ListOfPopupMenuEntryOfString: () => (T.ListOfPopupMenuEntryOfString = dart.constFn(core.List$(T.PopupMenuEntryOfString())))(),
    BuildContextToListOfPopupMenuEntryOfString: () => (T.BuildContextToListOfPopupMenuEntryOfString = dart.constFn(dart.fnType(T.ListOfPopupMenuEntryOfString(), [framework.BuildContext])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    BuildContextAndBoxConstraintsToMaterialApp: () => (T.BuildContextAndBoxConstraintsToMaterialApp = dart.constFn(dart.fnType(app.MaterialApp, [framework.BuildContext, box.BoxConstraints])))(),
    BuildContextAndBoxConstraintsToSingleChildScrollView: () => (T.BuildContextAndBoxConstraintsToSingleChildScrollView = dart.constFn(dart.fnType(single_child_scroll_view.SingleChildScrollView, [framework.BuildContext, box.BoxConstraints])))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    intTovoid: () => (T.intTovoid = dart.constFn(dart.fnType(dart.void, [core.int])))(),
    boolTovoid: () => (T.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    FnTovoid: () => (T.FnTovoid = dart.constFn(dart.fnType(dart.void, [T.VoidTovoid()])))(),
    BuildContextAndFnToAlertDialog: () => (T.BuildContextAndFnToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext, T.FnTovoid()])))(),
    BuildContextToStatefulBuilder: () => (T.BuildContextToStatefulBuilder = dart.constFn(dart.fnType(basic.StatefulBuilder, [framework.BuildContext])))(),
    BuildContextAndBoxConstraintsToRow: () => (T.BuildContextAndBoxConstraintsToRow = dart.constFn(dart.fnType(basic.Row, [framework.BuildContext, box.BoxConstraints])))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    intAndTaskToint: () => (T.intAndTaskToint = dart.constFn(dart.fnType(core.int, [core.int, main.Task])))(),
    TaskTobool: () => (T.TaskTobool = dart.constFn(dart.fnType(core.bool, [main.Task])))(),
    TaskToPadding: () => (T.TaskToPadding = dart.constFn(dart.fnType(basic.Padding, [main.Task])))(),
    ValueKeyOfString: () => (T.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    DismissDirectionTovoid: () => (T.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    BuildContextAndintToDismissible: () => (T.BuildContextAndintToDismissible = dart.constFn(dart.fnType(dismissible.Dismissible, [framework.BuildContext, core.int])))(),
    BuildContextAndBoxConstraintsToContainer: () => (T.BuildContextAndBoxConstraintsToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, box.BoxConstraints])))(),
    BuildContextToCountdownApp: () => (T.BuildContextToCountdownApp = dart.constFn(dart.fnType(main.CountdownApp, [framework.BuildContext])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.HomePage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281151294
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282210944
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282936207
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281940811
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: main.TimerMode.prototype,
        [_Enum__name]: "pomodoro",
        [_Enum_index]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283132820
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: main.TimerMode.prototype,
        [_Enum__name]: "shortBreak",
        [_Enum_index]: 1
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283923619
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: main.TimerMode.prototype,
        [_Enum__name]: "longBreak",
        [_Enum_index]: 2
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282813335
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58978
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 24,
        [Icon_icon]: C[14] || CT.C14
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[17] || CT.C17,
        [Text_textSpan]: null,
        [Text_data]: "Countdown Timer"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57548
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[20] || CT.C20
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58751
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[22] || CT.C22
      });
    },
    get C23() {
      return C[23] = dart.constList([0.3, 1], core.double);
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 30,
        [Radius_x]: 30
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[25] || CT.C25,
        [BorderRadius_bottomLeft]: C[25] || CT.C25,
        [BorderRadius_topRight]: C[26] || CT.C26,
        [BorderRadius_topLeft]: C[26] || CT.C26
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3019898879
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58372
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[29] || CT.C29
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280953386
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57690
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 20,
        [Icon_icon]: C[32] || CT.C32
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: popup_menu.PopupMenuDivider.prototype,
        [Widget_key]: null,
        [PopupMenuDivider_height]: 16
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57705
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 20,
        [Icon_icon]: C[35] || CT.C35
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1040187391
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: C[37] || CT.C37,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: 1,
        [Divider_height]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 15,
        [EdgeInsets_right]: 15,
        [EdgeInsets_top]: 15,
        [EdgeInsets_left]: 15
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 62538
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[41] || CT.C41
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 10
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 61563
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[47] || CT.C47
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57424
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[44] || CT.C44,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 24,
        [Icon_icon]: C[49] || CT.C49
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 4,
        [EdgeInsets_right]: 4,
        [EdgeInsets_top]: 4,
        [EdgeInsets_left]: 4
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 983273
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[53] || CT.C53
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 20
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[56] || CT.C56,
        [Text_textSpan]: null,
        [Text_data]: "Settings"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57706
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[28] || CT.C28,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[58] || CT.C58
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 600,
        [FontWeight_index]: 5
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: 1.2,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[61] || CT.C61,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[28] || CT.C28,
        [TextStyle_inherit]: true
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[60] || CT.C60,
        [Text_textSpan]: null,
        [Text_data]: "TIMER"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 24,
        [SizedBox_width]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[60] || CT.C60,
        [Text_textSpan]: null,
        [Text_data]: "AUTO START"
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 12,
        [SizedBox_width]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[60] || CT.C60,
        [Text_textSpan]: null,
        [Text_data]: "INTERVALS"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 24
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[61] || CT.C61,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[70] || CT.C70,
        [Text_textSpan]: null,
        [Text_data]: "Save Changes"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[56] || CT.C56,
        [Text_textSpan]: null,
        [Text_data]: "Add New Task"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 500,
        [FontWeight_index]: 4
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[75] || CT.C75,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[28] || CT.C28,
        [TextStyle_inherit]: true
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[74] || CT.C74,
        [Text_textSpan]: null,
        [Text_data]: "Task Name"
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[74] || CT.C74,
        [Text_textSpan]: null,
        [Text_data]: "Estimated Pomodoros"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58646
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[44] || CT.C44,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[80] || CT.C80
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57415
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[44] || CT.C44,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[84] || CT.C84
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 12
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[70] || CT.C70,
        [Text_textSpan]: null,
        [Text_data]: "Add Task"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[56] || CT.C56,
        [Text_textSpan]: null,
        [Text_data]: "Edit Task"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[74] || CT.C74,
        [Text_textSpan]: null,
        [Text_data]: "Progress"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[92] || CT.C92,
        [Text_textSpan]: null,
        [Text_data]: "Clear Finished Tasks"
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[28] || CT.C28,
        [TextStyle_inherit]: true
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[94] || CT.C94,
        [Text_textSpan]: null,
        [Text_data]: "Are you sure you want to remove all completed tasks?"
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[70] || CT.C70,
        [Text_textSpan]: null,
        [Text_data]: "Clear"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[92] || CT.C92,
        [Text_textSpan]: null,
        [Text_data]: "Clear All Tasks"
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[94] || CT.C94,
        [Text_textSpan]: null,
        [Text_data]: "Are you sure you want to remove all tasks? This action cannot be undone."
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[70] || CT.C70,
        [Text_textSpan]: null,
        [Text_data]: "Clear All"
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[56] || CT.C56,
        [Text_textSpan]: null,
        [Text_data]: "Progress Report"
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[70] || CT.C70,
        [Text_textSpan]: null,
        [Text_data]: "Close"
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[61] || CT.C61,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[61] || CT.C61,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: scroll_physics.AlwaysScrollableScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57785
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[44] || CT.C44,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[106] || CT.C106
      });
    },
    get C107() {
      return C[107] = dart.constList([C[6] || CT.C6, C[8] || CT.C8, C[10] || CT.C10], main.TimerMode);
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C111() {
      return C[111] = dart.constList([C[2] || CT.C2, C[5] || CT.C5], ui.Color);
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 0
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: C[23] || CT.C23,
        [Gradient_colors]: C[111] || CT.C111,
        [LinearGradient_tileMode]: C[112] || CT.C112,
        [LinearGradient_end]: C[113] || CT.C113,
        [LinearGradient_begin]: C[114] || CT.C114
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[109] || CT.C109,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: C[110] || CT.C110,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: null,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget_key]: null,
        [Spacer_flex]: 1
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[44] || CT.C44,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 32,
        [Icon_icon]: C[41] || CT.C41
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: -0.5,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 40,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[44] || CT.C44,
        [TextStyle_inherit]: true
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[120] || CT.C120,
        [Text_textSpan]: null,
        [Text_data]: "Focus Time"
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 24
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: main.CountdownApp.prototype,
        [Widget_key]: null
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 0
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 56,
        [OffsetBase__dx]: 1 / 0
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[61] || CT.C61,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[126] || CT.C126,
        [Text_textSpan]: null,
        [Text_data]: "Get Started"
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 16
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 4,
        [SizedBox_width]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    }
  }, false);
  var C = Array(131).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, theme: theme_data.ThemeData.dark(), home: C[1] || CT.C1});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.CountdownApp = class CountdownApp extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.CountdownApp.new({key: key});
    }
    createState() {
      return new main.CountdownAppState.new();
    }
  };
  (main.CountdownApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.CountdownApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.CountdownApp.prototype;
  dart.addTypeTests(main.CountdownApp);
  dart.addTypeCaches(main.CountdownApp);
  dart.setMethodSignature(main.CountdownApp, () => ({
    __proto__: dart.getMethods(main.CountdownApp.__proto__),
    createState: dart.fnType(main.CountdownAppState, [])
  }));
  dart.setLibraryUri(main.CountdownApp, I[0]);
  var _timer = dart.privateName(main, "_timer");
  var _currentSeconds = dart.privateName(main, "_currentSeconds");
  var _isRunning = dart.privateName(main, "_isRunning");
  var _currentMode = dart.privateName(main, "_currentMode");
  var _pomodoroCount = dart.privateName(main, "_pomodoroCount");
  var _pomodoroDuration = dart.privateName(main, "_pomodoroDuration");
  var _shortBreakDuration = dart.privateName(main, "_shortBreakDuration");
  var _longBreakDuration = dart.privateName(main, "_longBreakDuration");
  var _longBreakInterval = dart.privateName(main, "_longBreakInterval");
  var _autoStartBreaks = dart.privateName(main, "_autoStartBreaks");
  var _autoStartPomodoros = dart.privateName(main, "_autoStartPomodoros");
  var _darkMode = dart.privateName(main, "_darkMode");
  var _alarmSound = dart.privateName(main, "_alarmSound");
  var _tasks = dart.privateName(main, "_tasks");
  var _taskController = dart.privateName(main, "_taskController");
  var _currentTask = dart.privateName(main, "_currentTask");
  var _pomodoroColor = dart.privateName(main, "_pomodoroColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var _shortBreakColor = dart.privateName(main, "_shortBreakColor");
  var _longBreakColor = dart.privateName(main, "_longBreakColor");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var _getGradientColors = dart.privateName(main, "_getGradientColors");
  var _getCurrentBackgroundColor = dart.privateName(main, "_getCurrentBackgroundColor");
  var _resetTimer = dart.privateName(main, "_resetTimer");
  var _startTimer = dart.privateName(main, "_startTimer");
  var _toggleTimer = dart.privateName(main, "_toggleTimer");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _handleTimerComplete = dart.privateName(main, "_handleTimerComplete");
  var _switchMode = dart.privateName(main, "_switchMode");
  var _timerDisplay = dart.privateName(main, "_timerDisplay");
  var _currentColor = dart.privateName(main, "_currentColor");
  var Icon_textDirection = dart.privateName(icon$, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon$, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon$, "Icon.shadows");
  var Icon_color = dart.privateName(icon$, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon$, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon$, "Icon.grade");
  var Icon_weight = dart.privateName(icon$, "Icon.weight");
  var Icon_fill = dart.privateName(icon$, "Icon.fill");
  var Icon_size = dart.privateName(icon$, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon$, "Icon.icon");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var _showReportDialog = dart.privateName(main, "_showReportDialog");
  var _showSettingsDialog = dart.privateName(main, "_showSettingsDialog");
  var _buildModernTimer = dart.privateName(main, "_buildModernTimer");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var PopupMenuDivider_height = dart.privateName(popup_menu, "PopupMenuDivider.height");
  var _clearFinishedTasks = dart.privateName(main, "_clearFinishedTasks");
  var _clearAllTasks = dart.privateName(main, "_clearAllTasks");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  var _buildTaskList = dart.privateName(main, "_buildTaskList");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _getCompletedPomodoros = dart.privateName(main, "_getCompletedPomodoros");
  var _getTotalPomodoros = dart.privateName(main, "_getTotalPomodoros");
  var _getFinishTime = dart.privateName(main, "_getFinishTime");
  var _addTask = dart.privateName(main, "_addTask");
  var _buildModeButton = dart.privateName(main, "_buildModeButton");
  var _buildTimeSettingField = dart.privateName(main, "_buildTimeSettingField");
  var _buildSwitchSetting = dart.privateName(main, "_buildSwitchSetting");
  var _deleteTask = dart.privateName(main, "_deleteTask");
  var _toggleTaskCompletion = dart.privateName(main, "_toggleTaskCompletion");
  var _selectTask = dart.privateName(main, "_selectTask");
  var _editTask = dart.privateName(main, "_editTask");
  var _buildStatRow = dart.privateName(main, "_buildStatRow");
  var _buildProgressBar = dart.privateName(main, "_buildProgressBar");
  var _buildReportSection = dart.privateName(main, "_buildReportSection");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  main.CountdownAppState = class CountdownAppState extends framework.State$(main.CountdownApp) {
    [_getGradientColors]() {
      switch (this[_currentMode]) {
        case C[6] || CT.C6:
          {
            return T.JSArrayOfColor().of([C[2] || CT.C2, C[5] || CT.C5]);
          }
        case C[8] || CT.C8:
          {
            return T.JSArrayOfColor().of([C[3] || CT.C3, C[7] || CT.C7]);
          }
        case C[10] || CT.C10:
          {
            return T.JSArrayOfColor().of([C[4] || CT.C4, C[9] || CT.C9]);
          }
      }
    }
    [_getCurrentBackgroundColor]() {
      switch (this[_currentMode]) {
        case C[6] || CT.C6:
          {
            return this[_pomodoroColor];
          }
        case C[8] || CT.C8:
          {
            return this[_shortBreakColor];
          }
        case C[10] || CT.C10:
          {
            return this[_longBreakColor];
          }
      }
    }
    dispose() {
      let t0;
      t0 = this[_timer];
      t0 == null ? null : t0.cancel();
      this[_taskController].dispose();
      super.dispose();
    }
    [_resetTimer]() {
      this.setState(dart.fn(() => {
        let t0;
        t0 = this[_timer];
        t0 == null ? null : t0.cancel();
        this[_isRunning] = false;
        switch (this[_currentMode]) {
          case C[6] || CT.C6:
            {
              this[_currentSeconds] = this[_pomodoroDuration] * 60;
              break;
            }
          case C[8] || CT.C8:
            {
              this[_currentSeconds] = this[_shortBreakDuration] * 60;
              break;
            }
          case C[10] || CT.C10:
            {
              this[_currentSeconds] = this[_longBreakDuration] * 60;
              break;
            }
        }
      }, T.VoidTovoid()));
    }
    [_toggleTimer]() {
      this.setState(dart.fn(() => {
        let t0;
        if (this[_isRunning]) {
          t0 = this[_timer];
          t0 == null ? null : t0.cancel();
          this[_isRunning] = false;
        } else {
          this[_startTimer]();
        }
      }, T.VoidTovoid()));
    }
    [_startTimer]() {
      this[_isRunning] = true;
      this[_timer] = async.Timer.periodic(C[11] || CT.C11, dart.fn(timer => {
        this.setState(dart.fn(() => {
          let t0;
          if (this[_currentSeconds] > 0) {
            this[_currentSeconds] = this[_currentSeconds] - 1;
          } else {
            t0 = this[_timer];
            t0 == null ? null : t0.cancel();
            this[_isRunning] = false;
            this[_handleTimerComplete]();
          }
        }, T.VoidTovoid()));
      }, T.TimerTovoid()));
    }
    [_handleTimerComplete]() {
      if (this[_currentMode] === main.TimerMode.pomodoro) {
        if (this[_currentTask] != null) {
          this.setState(dart.fn(() => {
            let t0;
            t0 = dart.nullCheck(this[_currentTask]);
            t0.completedPomodoros = t0.completedPomodoros + 1;
          }, T.VoidTovoid()));
        }
        this[_pomodoroCount] = this[_pomodoroCount] + 1;
        if (this[_pomodoroCount][$modulo](this[_longBreakInterval]) === 0) {
          this[_switchMode](main.TimerMode.longBreak);
        } else {
          this[_switchMode](main.TimerMode.shortBreak);
        }
        if (this[_autoStartBreaks]) {
          this[_startTimer]();
        }
      } else {
        this[_switchMode](main.TimerMode.pomodoro);
        if (this[_autoStartPomodoros]) {
          this[_startTimer]();
        }
      }
    }
    [_switchMode](mode) {
      this.setState(dart.fn(() => {
        let t0;
        this[_currentMode] = mode;
        switch (mode) {
          case C[6] || CT.C6:
            {
              this[_currentSeconds] = this[_pomodoroDuration] * 60;
              break;
            }
          case C[8] || CT.C8:
            {
              this[_currentSeconds] = this[_shortBreakDuration] * 60;
              break;
            }
          case C[10] || CT.C10:
            {
              this[_currentSeconds] = this[_longBreakDuration] * 60;
              break;
            }
        }
        t0 = this[_timer];
        t0 == null ? null : t0.cancel();
        this[_isRunning] = false;
      }, T.VoidTovoid()));
    }
    get [_timerDisplay]() {
      let minutes = (this[_currentSeconds] / 60)[$truncate]();
      let seconds = this[_currentSeconds][$modulo](60);
      return minutes[$toString]()[$padLeft](2, "0") + ":" + seconds[$toString]()[$padLeft](2, "0");
    }
    get [_currentColor]() {
      switch (this[_currentMode]) {
        case C[6] || CT.C6:
          {
            return C[12] || CT.C12;
          }
        case C[8] || CT.C8:
          {
            return C[12] || CT.C12;
          }
        case C[10] || CT.C10:
          {
            return C[12] || CT.C12;
          }
      }
    }
    build(context) {
      let gradientColors = this[_getGradientColors]();
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let screenWidth = media_query.MediaQuery.of(context).size.width;
          let screenHeight = media_query.MediaQuery.of(context).size.height;
          let isSmallScreen = screenWidth < 360;
          let isMediumScreen = screenWidth < 600;
          return new app.MaterialApp.new({debugShowCheckedModeBanner: false, theme: theme_data.ThemeData.dark().copyWith({scaffoldBackgroundColor: this[_getCurrentBackgroundColor]()}), home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: gradientColors[$_get](0), elevation: 0, title: new basic.Row.new({children: T.JSArrayOfWidget().of([C[13] || CT.C13, C[15] || CT.C15, C[16] || CT.C16])}), actions: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[19] || CT.C19, onPressed: dart.bind(this, _showReportDialog)}), new icon_button.IconButton.new({icon: C[21] || CT.C21, onPressed: dart.bind(this, _showSettingsDialog)})])}), body: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({gradient: new gradient.LinearGradient.new({begin: alignment.Alignment.topCenter, end: alignment.Alignment.bottomCenter, colors: gradientColors, stops: C[23] || CT.C23})}), child: new safe_area.SafeArea.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minHeight: media_query.MediaQuery.of(context).size.height - media_query.MediaQuery.of(context).padding.top - media_query.MediaQuery.of(context).padding.bottom}), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new basic.SizedBox.new({height: media_query.MediaQuery.of(context).size.height * 0.45, child: this[_buildModernTimer](isSmallScreen)}), new container.Container.new({padding: new edge_insets.EdgeInsets.all(isSmallScreen ? 12 : 20), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.black.withOpacity(0.2), borderRadius: C[24] || CT.C24}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: (() => {
                                let t0 = T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new("Tasks", {style: new text_style.TextStyle.new({fontSize: isSmallScreen ? 20 : 24, fontWeight: ui.FontWeight.bold, color: colors.Colors.white})}), new (T.PopupMenuButtonOfString()).new({icon: C[27] || CT.C27, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), color: C[30] || CT.C30, itemBuilder: dart.fn(context => T.JSArrayOfPopupMenuEntryOfString().of([new (T.PopupMenuItemOfString()).new({value: "clear_finished", child: new basic.Row.new({children: T.JSArrayOfWidget().of([C[31] || CT.C31, C[15] || CT.C15, new text.Text.new("Clear finished tasks", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.9)})})])})}), C[33] || CT.C33, new (T.PopupMenuItemOfString()).new({value: "clear_all", child: new basic.Row.new({children: T.JSArrayOfWidget().of([C[34] || CT.C34, C[15] || CT.C15, new text.Text.new("Clear all tasks", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.9)})})])})})]), T.BuildContextToListOfPopupMenuEntryOfString()), onSelected: dart.fn(value => {
                                          switch (value) {
                                            case "clear_finished":
                                              {
                                                this[_clearFinishedTasks]();
                                                break;
                                              }
                                            case "clear_all":
                                              {
                                                this[_clearAllTasks]();
                                                break;
                                              }
                                          }
                                        }, T.StringTovoid())})])}), C[36] || CT.C36]);
                                if (this[_tasks][$isNotEmpty]) t0[$addAll](T.JSArrayOfWidget().of([new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(15)}), child: this[_buildTaskList]()}), C[38] || CT.C38, new container.Container.new({padding: C[39] || CT.C39, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(15)}), child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([C[40] || CT.C40, C[42] || CT.C42, new text.Text.new("Pomos: " + dart.str(this[_getCompletedPomodoros]()) + "/" + dart.str(this[_getTotalPomodoros]()), {style: C[43] || CT.C43})])}), C[45] || CT.C45, new basic.Row.new({children: T.JSArrayOfWidget().of([C[46] || CT.C46, C[42] || CT.C42, new text.Text.new("Finish At: " + this[_getFinishTime](), {style: C[43] || CT.C43})])})])})})]));
                                t0.push(C[38] || CT.C38);
                                t0.push(new ink_well.InkWell.new({onTap: dart.bind(this, _addTask), child: new container.Container.new({padding: C[39] || CT.C39, decoration: new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: colors.Colors.white.withOpacity(0.3)}), borderRadius: new border_radius.BorderRadius.circular(15)}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([C[48] || CT.C48, C[42] || CT.C42, new text.Text.new("Add Task", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.9), fontSize: 16, fontWeight: ui.FontWeight.w500})})])})})}));
                                return t0;
                              })()})})])})})})})})})});
        }, T.BuildContextAndBoxConstraintsToMaterialApp())});
    }
    [_buildModernTimer](isSmallScreen) {
      let minutes = (this[_currentSeconds] / 60)[$truncate]()[$toString]()[$padLeft](2, "0");
      let seconds = this[_currentSeconds][$modulo](60)[$toString]()[$padLeft](2, "0");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let timerFontSize = isSmallScreen ? 80 : 120;
          let verticalPadding = isSmallScreen ? 20 : 40;
          return new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: verticalPadding}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new text.Text.new(minutes + ":" + seconds, {style: new text_style.TextStyle.new({fontSize: timerFontSize, fontWeight: ui.FontWeight.w300, color: colors.Colors.white, letterSpacing: -2})}), C[38] || CT.C38, new single_child_scroll_view.SingleChildScrollView.new({scrollDirection: basic_types.Axis.horizontal, child: new container.Container.new({padding: C[50] || CT.C50, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(30)}), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([this[_buildModeButton](main.TimerMode.pomodoro, "Pomodoro"), this[_buildModeButton](main.TimerMode.shortBreak, "Short Break"), this[_buildModeButton](main.TimerMode.longBreak, "Long Break")])})})})])})}), C[38] || CT.C38, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({margin: C[51] || CT.C51, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
                          this.setState(dart.fn(() => {
                            let t1;
                            t1 = this[_timer];
                            t1 == null ? null : t1.cancel();
                            this[_isRunning] = false;
                            switch (this[_currentMode]) {
                              case C[6] || CT.C6:
                                {
                                  this[_currentSeconds] = this[_pomodoroDuration] * 60;
                                  break;
                                }
                              case C[8] || CT.C8:
                                {
                                  this[_currentSeconds] = this[_shortBreakDuration] * 60;
                                  break;
                                }
                              case C[10] || CT.C10:
                                {
                                  this[_currentSeconds] = this[_longBreakDuration] * 60;
                                  break;
                                }
                            }
                          }, T.VoidTovoid()));
                        }, T.VoidTovoid()), icon: C[52] || CT.C52, iconSize: isSmallScreen ? 24 : 32, color: colors.Colors.white.withOpacity(0.7), style: icon_button.IconButton.styleFrom({backgroundColor: colors.Colors.white.withOpacity(0.1), padding: new edge_insets.EdgeInsets.all(isSmallScreen ? 8 : 12)})})}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _toggleTimer), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.white, foregroundColor: this[_getCurrentBackgroundColor](), padding: new edge_insets.EdgeInsets.symmetric({horizontal: isSmallScreen ? 32 : 48, vertical: isSmallScreen ? 12 : 16}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(30)}), elevation: 0}), child: new text.Text.new(this[_isRunning] ? "PAUSE" : "START", {style: new text_style.TextStyle.new({fontSize: isSmallScreen ? 16 : 20, fontWeight: ui.FontWeight.w600, color: this[_getCurrentBackgroundColor]()})})})])})])})});
        }, T.BuildContextAndBoxConstraintsToSingleChildScrollView())});
    }
    [_buildModeButton](mode, label) {
      let isSelected = this[_currentMode] === mode;
      return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => this[_switchMode](mode), T.VoidTovoid()), child: new container.Container.new({padding: C[54] || CT.C54, decoration: new box_decoration.BoxDecoration.new({color: isSelected ? colors.Colors.white.withOpacity(0.2) : colors.Colors.transparent, borderRadius: new border_radius.BorderRadius.circular(25)}), child: new text.Text.new(label, {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(isSelected ? 1 : 0.7), fontSize: 14, fontWeight: isSelected ? ui.FontWeight.w600 : ui.FontWeight.normal})})})});
    }
    [_showSettingsDialog]() {
      let tempPomodoroMinutes = this[_pomodoroDuration];
      let tempShortBreakMinutes = this[_shortBreakDuration];
      let tempLongBreakMinutes = this[_longBreakDuration];
      let tempLongBreakInterval = this[_longBreakInterval];
      let tempAutoStartBreaks = this[_autoStartBreaks];
      let tempAutoStartPomodoros = this[_autoStartPomodoros];
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(dialogContext => new basic.StatefulBuilder.new({builder: dart.fn((context, setDialogState) => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[55] || CT.C55, new icon_button.IconButton.new({icon: C[57] || CT.C57, onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid())})])}), content: new container.Container.new({width: 1.7976931348623157e+308, child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([C[59] || CT.C59, C[38] || CT.C38, this[_buildTimeSettingField]("Pomodoro", tempPomodoroMinutes, dart.fn(value => setDialogState(dart.fn(() => tempPomodoroMinutes = value, T.VoidTovoid())), T.intTovoid())), C[62] || CT.C62, this[_buildTimeSettingField]("Short Break", tempShortBreakMinutes, dart.fn(value => setDialogState(dart.fn(() => tempShortBreakMinutes = value, T.VoidTovoid())), T.intTovoid())), C[62] || CT.C62, this[_buildTimeSettingField]("Long Break", tempLongBreakMinutes, dart.fn(value => setDialogState(dart.fn(() => tempLongBreakMinutes = value, T.VoidTovoid())), T.intTovoid())), C[63] || CT.C63, C[64] || CT.C64, C[62] || CT.C62, this[_buildSwitchSetting]("Auto Start Breaks", tempAutoStartBreaks, dart.fn(value => setDialogState(dart.fn(() => tempAutoStartBreaks = value, T.VoidTovoid())), T.boolTovoid())), C[65] || CT.C65, this[_buildSwitchSetting]("Auto Start Pomodoros", tempAutoStartPomodoros, dart.fn(value => setDialogState(dart.fn(() => tempAutoStartPomodoros = value, T.VoidTovoid())), T.boolTovoid())), C[63] || CT.C63, C[66] || CT.C66, C[62] || CT.C62, this[_buildTimeSettingField]("Long Break Interval", tempLongBreakInterval, dart.fn(value => setDialogState(dart.fn(() => tempLongBreakInterval = value, T.VoidTovoid())), T.intTovoid()), {isInterval: true})])})})}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("Cancel", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 16})})}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this[_pomodoroDuration] = tempPomodoroMinutes;
                    this[_shortBreakDuration] = tempShortBreakMinutes;
                    this[_longBreakDuration] = tempLongBreakMinutes;
                    this[_longBreakInterval] = tempLongBreakInterval;
                    this[_autoStartBreaks] = tempAutoStartBreaks;
                    this[_autoStartPomodoros] = tempAutoStartPomodoros;
                  }, T.VoidTovoid()));
                  navigator.Navigator.pop(T.ObjectN(), context);
                }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), child: C[69] || CT.C69})]), actionsPadding: C[71] || CT.C71}), T.BuildContextAndFnToAlertDialog())}), T.BuildContextToStatefulBuilder())});
    }
    [_buildTimeSettingField](label, value, onChanged, opts) {
      let isInterval = opts && 'isInterval' in opts ? opts.isInterval : false;
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let isSmallScreen = constraints.maxWidth < 360;
          return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new basic.Flexible.new({child: new text.Text.new(label, {style: new text_style.TextStyle.new({color: colors.Colors.white, fontSize: isSmallScreen ? 14 : 16})})}), new container.Container.new({width: isSmallScreen ? 80 : 100, height: isSmallScreen ? 40 : 48, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: new icon$.Icon.new(icons.Icons.remove, {color: colors.Colors.white70, size: isSmallScreen ? 16 : 20}), onPressed: dart.fn(() => {
                        if (isInterval && value > 1 || !isInterval && value > 1) {
                          onChanged(value - 1);
                        }
                      }, T.VoidTovoid())}), new text.Text.new(value[$toString](), {style: new text_style.TextStyle.new({color: colors.Colors.white, fontSize: isSmallScreen ? 14 : 16, fontWeight: ui.FontWeight.w600})}), new icon_button.IconButton.new({icon: new icon$.Icon.new(icons.Icons.add, {color: colors.Colors.white70, size: isSmallScreen ? 16 : 20}), onPressed: dart.fn(() => {
                        if (isInterval && value < 10 || !isInterval && value < 60) {
                          onChanged(value + 1);
                        }
                      }, T.VoidTovoid())})])})})])});
        }, T.BuildContextAndBoxConstraintsToRow())});
    }
    [_buildSwitchSetting](label, value, onChanged) {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: C[43] || CT.C43}), new $switch.Switch.new({value: value, onChanged: onChanged, activeColor: C[67] || CT.C67, activeTrackColor: (C[67] || CT.C67).withOpacity(0.5), inactiveThumbColor: colors.Colors.white70, inactiveTrackColor: colors.Colors.white24})])});
    }
    [_addTask]() {
      this[_taskController].clear();
      let tempEstimatedPomodoros = 1;
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[72] || CT.C72, new icon_button.IconButton.new({icon: C[57] || CT.C57, onPressed: dart.fn(() => {
                  navigator.Navigator.pop(T.ObjectN(), context);
                  this[_taskController].clear();
                }, T.VoidTovoid())})])}), content: new container.Container.new({width: 1.7976931348623157e+308, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[73] || CT.C73, C[76] || CT.C76, new text_field.TextField.new({controller: this[_taskController], style: C[77] || CT.C77, decoration: new input_decorator.InputDecoration.new({filled: true, fillColor: colors.Colors.white.withOpacity(0.1), border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(10), borderSide: borders.BorderSide.none}), hintText: "Enter task name", hintStyle: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.3)})}), autofocus: true}), C[63] || CT.C63, C[78] || CT.C78, C[76] || CT.C76, new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[79] || CT.C79, onPressed: dart.fn(() => {
                              if (tempEstimatedPomodoros > 1) {
                                this.setState(dart.fn(() => {
                                  tempEstimatedPomodoros = tempEstimatedPomodoros - 1;
                                }, T.VoidTovoid()));
                              }
                            }, T.VoidTovoid())}), new container.Container.new({padding: C[81] || CT.C81, child: new text.Text.new(tempEstimatedPomodoros[$toString](), {style: C[82] || CT.C82})}), new icon_button.IconButton.new({icon: C[83] || CT.C83, onPressed: dart.fn(() => {
                              this.setState(dart.fn(() => {
                                tempEstimatedPomodoros = tempEstimatedPomodoros + 1;
                              }, T.VoidTovoid()));
                            }, T.VoidTovoid())})])})}), C[85] || CT.C85, C[40] || CT.C40])})])})}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.pop(T.ObjectN(), context);
                this[_taskController].clear();
              }, T.VoidTovoid()), child: new text.Text.new("Cancel", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 16})})}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                if (this[_taskController].text[$isNotEmpty]) {
                  this.setState(dart.fn(() => {
                    this[_tasks][$add](new main.Task.new({title: this[_taskController].text, estimatedPomodoros: tempEstimatedPomodoros}));
                    this[_taskController].clear();
                  }, T.VoidTovoid()));
                  navigator.Navigator.pop(T.ObjectN(), context);
                }
              }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), elevation: 2}), child: C[86] || CT.C86})]), actionsPadding: C[71] || CT.C71}), T.BuildContextToAlertDialog())});
    }
    [_deleteTask](index) {
      this.setState(dart.fn(() => {
        if (dart.equals(this[_currentTask], this[_tasks][$_get](index))) {
          this[_currentTask] = null;
        }
        this[_tasks][$removeAt](index);
      }, T.VoidTovoid()));
    }
    [_toggleTaskCompletion](index) {
      this.setState(dart.fn(() => {
        this[_tasks][$_get](index).isCompleted = !this[_tasks][$_get](index).isCompleted;
      }, T.VoidTovoid()));
    }
    [_selectTask](task) {
      this.setState(dart.fn(() => {
        this[_currentTask] = task;
      }, T.VoidTovoid()));
    }
    [_editTask](index) {
      let task = this[_tasks][$_get](index);
      this[_taskController].text = task.title;
      let tempEstimatedPomodoros = task.estimatedPomodoros;
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[87] || CT.C87, new icon_button.IconButton.new({icon: C[57] || CT.C57, onPressed: dart.fn(() => {
                  navigator.Navigator.pop(T.ObjectN(), context);
                  this[_taskController].clear();
                }, T.VoidTovoid())})])}), content: new container.Container.new({width: 1.7976931348623157e+308, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                let t1 = T.JSArrayOfWidget().of([C[73] || CT.C73, C[76] || CT.C76, new text_field.TextField.new({controller: this[_taskController], style: C[77] || CT.C77, decoration: new input_decorator.InputDecoration.new({filled: true, fillColor: colors.Colors.white.withOpacity(0.1), border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(10), borderSide: borders.BorderSide.none}), hintText: "Enter task name", hintStyle: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.3)})}), autofocus: true}), C[63] || CT.C63, C[78] || CT.C78, C[76] || CT.C76, new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[79] || CT.C79, onPressed: dart.fn(() => {
                                if (tempEstimatedPomodoros > 1) {
                                  this.setState(dart.fn(() => {
                                    tempEstimatedPomodoros = tempEstimatedPomodoros - 1;
                                  }, T.VoidTovoid()));
                                }
                              }, T.VoidTovoid())}), new container.Container.new({padding: C[81] || CT.C81, child: new text.Text.new(tempEstimatedPomodoros[$toString](), {style: C[82] || CT.C82})}), new icon_button.IconButton.new({icon: C[83] || CT.C83, onPressed: dart.fn(() => {
                                this.setState(dart.fn(() => {
                                  tempEstimatedPomodoros = tempEstimatedPomodoros + 1;
                                }, T.VoidTovoid()));
                              }, T.VoidTovoid())})])})}), C[85] || CT.C85, C[40] || CT.C40])})]);
                if (task.completedPomodoros > 0) t1[$addAll](T.JSArrayOfWidget().of([C[63] || CT.C63, C[88] || CT.C88, C[76] || CT.C76, new container.Container.new({padding: C[89] || CT.C89, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new("Completed Pomodoros", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})}), new text.Text.new(task.completedPomodoros[$toString](), {style: C[90] || CT.C90})])})})]));
                return t1;
              })()})}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.pop(T.ObjectN(), context);
                this[_taskController].clear();
              }, T.VoidTovoid()), child: new text.Text.new("Cancel", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 16})})}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                if (this[_taskController].text[$isNotEmpty]) {
                  this.setState(dart.fn(() => {
                    task.title = this[_taskController].text;
                    task.estimatedPomodoros = tempEstimatedPomodoros;
                  }, T.VoidTovoid()));
                  navigator.Navigator.pop(T.ObjectN(), context);
                  this[_taskController].clear();
                }
              }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), elevation: 2}), child: C[69] || CT.C69})]), actionsPadding: C[71] || CT.C71}), T.BuildContextToAlertDialog())});
    }
    [_getFinishTime]() {
      let totalMinutesLeft = 0;
      for (let task of this[_tasks]) {
        if (!task.isCompleted) {
          totalMinutesLeft = totalMinutesLeft + (task.estimatedPomodoros - task.completedPomodoros) * this[_pomodoroDuration];
        }
      }
      if (totalMinutesLeft === 0) return "No tasks remaining";
      let now = new core.DateTime.now();
      let finishTime = now.add(new core.Duration.new({minutes: totalMinutesLeft}));
      let hours = finishTime.hour[$toString]()[$padLeft](2, "0");
      let minutes = finishTime.minute[$toString]()[$padLeft](2, "0");
      return hours + ":" + minutes + " (" + (totalMinutesLeft / 60)[$toStringAsFixed](1) + "h)";
    }
    [_getTotalPomodoros]() {
      return this[_tasks][$fold](core.int, 0, dart.fn((sum, task) => sum + task.estimatedPomodoros, T.intAndTaskToint()));
    }
    [_getCompletedPomodoros]() {
      return this[_tasks][$fold](core.int, 0, dart.fn((sum, task) => sum + task.completedPomodoros, T.intAndTaskToint()));
    }
    [_clearFinishedTasks]() {
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: C[91] || CT.C91, content: C[93] || CT.C93, actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("Cancel", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 16})})}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                this.setState(dart.fn(() => {
                  this[_tasks][$removeWhere](dart.fn(task => task.isCompleted, T.TaskTobool()));
                }, T.VoidTovoid()));
                navigator.Navigator.pop(T.ObjectN(), context);
              }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), child: C[95] || CT.C95})]), actionsPadding: C[71] || CT.C71}), T.BuildContextToAlertDialog())});
    }
    [_clearAllTasks]() {
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: C[96] || CT.C96, content: C[97] || CT.C97, actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("Cancel", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 16})})}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                this.setState(dart.fn(() => {
                  this[_tasks][$clear]();
                }, T.VoidTovoid()));
                navigator.Navigator.pop(T.ObjectN(), context);
              }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), child: C[98] || CT.C98})]), actionsPadding: C[71] || CT.C71}), T.BuildContextToAlertDialog())});
    }
    [_showReportDialog]() {
      let totalTasks = this[_tasks][$length];
      let completedTasks = this[_tasks][$where](dart.fn(task => task.isCompleted, T.TaskTobool()))[$length];
      let totalPomodoros = this[_tasks][$fold](core.int, 0, dart.fn((sum, task) => sum + task.estimatedPomodoros, T.intAndTaskToint()));
      let completedPomodoros = this[_tasks][$fold](core.int, 0, dart.fn((sum, task) => sum + task.completedPomodoros, T.intAndTaskToint()));
      let completionRate = totalTasks > 0 ? completedTasks / totalTasks * 100 : 0;
      let pomodoroProgress = totalPomodoros > 0 ? completedPomodoros / totalPomodoros * 100 : 0;
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({backgroundColor: C[30] || CT.C30, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(15)}), title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[99] || CT.C99, new icon_button.IconButton.new({icon: C[57] || CT.C57, onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid())})])}), content: new container.Container.new({width: 1.7976931348623157e+308, child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisSize: flex.MainAxisSize.min, children: (() => {
                  let t2 = T.JSArrayOfWidget().of([this[_buildReportSection]("Task Progress", icons.Icons.task_alt, T.JSArrayOfWidget().of([this[_buildStatRow]("Total Tasks", totalTasks[$toString]()), this[_buildStatRow]("Completed Tasks", completedTasks[$toString]()), this[_buildProgressBar]("Completion Rate", completionRate)])), C[63] || CT.C63, this[_buildReportSection]("Pomodoro Progress", icons.Icons.timer, T.JSArrayOfWidget().of([this[_buildStatRow]("Total Pomodoros", totalPomodoros[$toString]()), this[_buildStatRow]("Completed Pomodoros", completedPomodoros[$toString]()), this[_buildProgressBar]("Progress", pomodoroProgress)]))]);
                  if (this[_tasks][$isNotEmpty]) t2[$addAll](T.JSArrayOfWidget().of([C[63] || CT.C63, this[_buildReportSection]("Task Details", icons.Icons.list_alt, this[_tasks][$map](basic.Padding, dart.fn(task => new basic.Padding.new({padding: C[100] || CT.C100, child: new basic.Row.new({children: T.JSArrayOfWidget().of([new icon$.Icon.new(task.isCompleted ? icons.Icons.check_circle : icons.Icons.circle_outlined, {color: task.isCompleted ? colors.Colors.green : colors.Colors.white54, size: 20}), C[15] || CT.C15, new basic.Expanded.new({child: new text.Text.new(task.title, {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.9), decoration: task.isCompleted ? ui.TextDecoration.lineThrough : null})})}), new text.Text.new(dart.str(task.completedPomodoros) + "/" + dart.str(task.estimatedPomodoros), {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})})])})}), T.TaskToPadding()))[$toList]())]));
                  return t2;
                })()})})}), actions: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[67] || CT.C67, foregroundColor: colors.Colors.white, padding: C[68] || CT.C68, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), child: C[101] || CT.C101})]), actionsPadding: C[71] || CT.C71}), T.BuildContextToAlertDialog())});
    }
    [_buildReportSection](title, icon, children) {
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
          let t3 = T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new icon$.Icon.new(icon, {color: colors.Colors.white70, size: 20}), C[15] || CT.C15, new text.Text.new(title, {style: C[102] || CT.C102})])}), C[62] || CT.C62]);
          t3[$addAll](children);
          return t3;
        })()});
    }
    [_buildStatRow](label, value) {
      return new basic.Padding.new({padding: C[100] || CT.C100, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})}), new text.Text.new(value, {style: C[103] || CT.C103})])})});
    }
    [_buildProgressBar](label, percentage) {
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})}), new text.Text.new(percentage[$toStringAsFixed](1) + "%", {style: C[103] || CT.C103})])}), C[76] || CT.C76, new container.Container.new({height: 6, width: 1 / 0, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(3)}), child: new basic.FractionallySizedBox.new({alignment: alignment.Alignment.centerLeft, widthFactor: percentage / 100, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: C[67] || CT.C67, borderRadius: new border_radius.BorderRadius.circular(3)})})})})])});
    }
    [_buildTaskList]() {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let isSmallScreen = constraints.maxWidth < 360;
          return new container.Container.new({constraints: new box.BoxConstraints.new({maxHeight: media_query.MediaQuery.of(context).size.height * 0.3}), child: new scroll_view.ListView.builder({shrinkWrap: true, physics: C[104] || CT.C104, itemCount: this[_tasks][$length], itemBuilder: dart.fn((context, index) => {
                let task = this[_tasks][$_get](index);
                return new dismissible.Dismissible.new({key: new (T.ValueKeyOfString()).new(task.title), background: new container.Container.new({color: colors.Colors.red.withOpacity(0.8), alignment: alignment.Alignment.centerRight, padding: C[51] || CT.C51, child: C[105] || CT.C105}), direction: dismissible.DismissDirection.endToStart, onDismissed: dart.fn(direction => {
                    this.setState(dart.fn(() => {
                      this[_tasks][$removeAt](index);
                    }, T.VoidTovoid()));
                  }, T.DismissDirectionTovoid()), child: new list_tile.ListTile.new({contentPadding: new edge_insets.EdgeInsets.symmetric({horizontal: isSmallScreen ? 8 : 16, vertical: isSmallScreen ? 4 : 8}), leading: new container.Container.new({width: isSmallScreen ? 32 : 40, height: isSmallScreen ? 32 : 40, decoration: new box_decoration.BoxDecoration.new({color: task.isCompleted ? colors.Colors.green.withOpacity(0.2) : colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(isSmallScreen ? 16 : 20)}), child: new icon_button.IconButton.new({icon: new icon$.Icon.new(task.isCompleted ? icons.Icons.check_circle : icons.Icons.circle_outlined, {color: task.isCompleted ? colors.Colors.green : colors.Colors.white, size: isSmallScreen ? 16 : 20}), onPressed: dart.fn(() => this[_toggleTaskCompletion](index), T.VoidTovoid())})}), title: new text.Text.new(task.title, {style: new text_style.TextStyle.new({color: colors.Colors.white, decoration: task.isCompleted ? ui.TextDecoration.lineThrough : null, fontSize: isSmallScreen ? 14 : 16})}), subtitle: new text.Text.new("Pomodoros: " + dart.str(task.completedPomodoros) + "/" + dart.str(task.estimatedPomodoros), {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: isSmallScreen ? 10 : 12})})})});
              }, T.BuildContextAndintToDismissible())})});
        }, T.BuildContextAndBoxConstraintsToContainer())});
    }
    static ['_#new#tearOff']() {
      return new main.CountdownAppState.new();
    }
  };
  (main.CountdownAppState.new = function() {
    this[_timer] = null;
    this[_currentSeconds] = 25 * 60;
    this[_isRunning] = false;
    this[_currentMode] = main.TimerMode.pomodoro;
    this[_pomodoroCount] = 0;
    this[_pomodoroDuration] = 25;
    this[_shortBreakDuration] = 5;
    this[_longBreakDuration] = 15;
    this[_longBreakInterval] = 4;
    this[_autoStartBreaks] = false;
    this[_autoStartPomodoros] = false;
    this[_darkMode] = false;
    this[_alarmSound] = "Kitchen";
    this[_tasks] = T.JSArrayOfTask().of([]);
    this[_taskController] = new editable_text.TextEditingController.new();
    this[_currentTask] = null;
    this[_pomodoroColor] = C[2] || CT.C2;
    this[_shortBreakColor] = C[3] || CT.C3;
    this[_longBreakColor] = C[4] || CT.C4;
    main.CountdownAppState.__proto__.new.call(this);
    ;
  }).prototype = main.CountdownAppState.prototype;
  dart.addTypeTests(main.CountdownAppState);
  dart.addTypeCaches(main.CountdownAppState);
  dart.setMethodSignature(main.CountdownAppState, () => ({
    __proto__: dart.getMethods(main.CountdownAppState.__proto__),
    [_getGradientColors]: dart.fnType(core.List$(ui.Color), []),
    [_getCurrentBackgroundColor]: dart.fnType(ui.Color, []),
    [_resetTimer]: dart.fnType(dart.void, []),
    [_toggleTimer]: dart.fnType(dart.void, []),
    [_startTimer]: dart.fnType(dart.void, []),
    [_handleTimerComplete]: dart.fnType(dart.void, []),
    [_switchMode]: dart.fnType(dart.void, [main.TimerMode]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildModernTimer]: dart.fnType(framework.Widget, [core.bool]),
    [_buildModeButton]: dart.fnType(framework.Widget, [main.TimerMode, core.String]),
    [_showSettingsDialog]: dart.fnType(dart.void, []),
    [_buildTimeSettingField]: dart.fnType(framework.Widget, [core.String, core.int, dart.fnType(dart.dynamic, [core.int])], {isInterval: core.bool}, {}),
    [_buildSwitchSetting]: dart.fnType(framework.Widget, [core.String, core.bool, dart.fnType(dart.dynamic, [core.bool])]),
    [_addTask]: dart.fnType(dart.void, []),
    [_deleteTask]: dart.fnType(dart.void, [core.int]),
    [_toggleTaskCompletion]: dart.fnType(dart.void, [core.int]),
    [_selectTask]: dart.fnType(dart.void, [main.Task]),
    [_editTask]: dart.fnType(dart.void, [core.int]),
    [_getFinishTime]: dart.fnType(core.String, []),
    [_getTotalPomodoros]: dart.fnType(core.int, []),
    [_getCompletedPomodoros]: dart.fnType(core.int, []),
    [_clearFinishedTasks]: dart.fnType(dart.void, []),
    [_clearAllTasks]: dart.fnType(dart.void, []),
    [_showReportDialog]: dart.fnType(dart.void, []),
    [_buildReportSection]: dart.fnType(framework.Widget, [core.String, icon_data.IconData, core.List$(framework.Widget)]),
    [_buildStatRow]: dart.fnType(framework.Widget, [core.String, core.String]),
    [_buildProgressBar]: dart.fnType(framework.Widget, [core.String, core.double]),
    [_buildTaskList]: dart.fnType(framework.Widget, [])
  }));
  dart.setGetterSignature(main.CountdownAppState, () => ({
    __proto__: dart.getGetters(main.CountdownAppState.__proto__),
    [_timerDisplay]: core.String,
    [_currentColor]: ui.Color
  }));
  dart.setLibraryUri(main.CountdownAppState, I[0]);
  dart.setFieldSignature(main.CountdownAppState, () => ({
    __proto__: dart.getFields(main.CountdownAppState.__proto__),
    [_timer]: dart.fieldType(dart.nullable(async.Timer)),
    [_currentSeconds]: dart.fieldType(core.int),
    [_isRunning]: dart.fieldType(core.bool),
    [_currentMode]: dart.fieldType(main.TimerMode),
    [_pomodoroCount]: dart.fieldType(core.int),
    [_pomodoroDuration]: dart.fieldType(core.int),
    [_shortBreakDuration]: dart.fieldType(core.int),
    [_longBreakDuration]: dart.fieldType(core.int),
    [_longBreakInterval]: dart.fieldType(core.int),
    [_autoStartBreaks]: dart.fieldType(core.bool),
    [_autoStartPomodoros]: dart.fieldType(core.bool),
    [_darkMode]: dart.fieldType(core.bool),
    [_alarmSound]: dart.fieldType(core.String),
    [_tasks]: dart.finalFieldType(core.List$(main.Task)),
    [_taskController]: dart.finalFieldType(editable_text.TextEditingController),
    [_currentTask]: dart.fieldType(dart.nullable(main.Task)),
    [_pomodoroColor]: dart.finalFieldType(ui.Color),
    [_shortBreakColor]: dart.finalFieldType(ui.Color),
    [_longBreakColor]: dart.finalFieldType(ui.Color)
  }));
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  main.TimerMode = class TimerMode extends core._Enum {
    [_enumToString]() {
      return "TimerMode." + this[_name];
    }
  };
  (main.TimerMode.new = function(index, name) {
    main.TimerMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = main.TimerMode.prototype;
  dart.addTypeTests(main.TimerMode);
  dart.addTypeCaches(main.TimerMode);
  dart.setMethodSignature(main.TimerMode, () => ({
    __proto__: dart.getMethods(main.TimerMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(main.TimerMode, I[0]);
  dart.setStaticFieldSignature(main.TimerMode, () => ['values', 'pomodoro', 'shortBreak', 'longBreak']);
  dart.defineLazy(main.TimerMode, {
    /*main.TimerMode.values*/get values() {
      return C[107] || CT.C107;
    },
    /*main.TimerMode.pomodoro*/get pomodoro() {
      return C[6] || CT.C6;
    },
    /*main.TimerMode.shortBreak*/get shortBreak() {
      return C[8] || CT.C8;
    },
    /*main.TimerMode.longBreak*/get longBreak() {
      return C[10] || CT.C10;
    }
  }, false);
  var title$ = dart.privateName(main, "Task.title");
  var isCompleted$ = dart.privateName(main, "Task.isCompleted");
  var estimatedPomodoros$ = dart.privateName(main, "Task.estimatedPomodoros");
  var completedPomodoros$ = dart.privateName(main, "Task.completedPomodoros");
  main.Task = class Task extends core.Object {
    get title() {
      return this[title$];
    }
    set title(value) {
      this[title$] = value;
    }
    get isCompleted() {
      return this[isCompleted$];
    }
    set isCompleted(value) {
      this[isCompleted$] = value;
    }
    get estimatedPomodoros() {
      return this[estimatedPomodoros$];
    }
    set estimatedPomodoros(value) {
      this[estimatedPomodoros$] = value;
    }
    get completedPomodoros() {
      return this[completedPomodoros$];
    }
    set completedPomodoros(value) {
      this[completedPomodoros$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let isCompleted = opts && 'isCompleted' in opts ? opts.isCompleted : false;
      let estimatedPomodoros = opts && 'estimatedPomodoros' in opts ? opts.estimatedPomodoros : 1;
      let completedPomodoros = opts && 'completedPomodoros' in opts ? opts.completedPomodoros : 0;
      return new main.Task.new({title: title, isCompleted: isCompleted, estimatedPomodoros: estimatedPomodoros, completedPomodoros: completedPomodoros});
    }
  };
  (main.Task.new = function(opts) {
    let title = opts && 'title' in opts ? opts.title : null;
    let isCompleted = opts && 'isCompleted' in opts ? opts.isCompleted : false;
    let estimatedPomodoros = opts && 'estimatedPomodoros' in opts ? opts.estimatedPomodoros : 1;
    let completedPomodoros = opts && 'completedPomodoros' in opts ? opts.completedPomodoros : 0;
    this[title$] = title;
    this[isCompleted$] = isCompleted;
    this[estimatedPomodoros$] = estimatedPomodoros;
    this[completedPomodoros$] = completedPomodoros;
    ;
  }).prototype = main.Task.prototype;
  dart.addTypeTests(main.Task);
  dart.addTypeCaches(main.Task);
  dart.setLibraryUri(main.Task, I[0]);
  dart.setFieldSignature(main.Task, () => ({
    __proto__: dart.getFields(main.Task.__proto__),
    title: dart.fieldType(core.String),
    isCompleted: dart.fieldType(core.bool),
    estimatedPomodoros: dart.fieldType(core.int),
    completedPomodoros: dart.fieldType(core.int)
  }));
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  var Spacer_flex = dart.privateName(spacer, "Spacer.flex");
  var _buildFeatureItem = dart.privateName(main, "_buildFeatureItem");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  main.HomePage = class HomePage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HomePage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: C[2] || CT.C2, body: new container.Container.new({decoration: C[108] || CT.C108, child: new safe_area.SafeArea.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[115] || CT.C115, new basic.Padding.new({padding: C[116] || CT.C116, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[117] || CT.C117, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(12)}), child: C[118] || CT.C118})])}), C[63] || CT.C63, C[119] || CT.C119, C[76] || CT.C76, new text.Text.new("Boost your productivity with our\nmodern Pomodoro timer", {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.white.withOpacity(0.7), height: 1.4})})])})}), C[115] || CT.C115, new basic.Padding.new({padding: C[116] || CT.C116, child: new basic.Column.new({children: T.JSArrayOfWidget().of([this[_buildFeatureItem]({icon: icons.Icons.timer, title: "Smart Timer", description: "Customizable Pomodoro intervals"}), C[38] || CT.C38, this[_buildFeatureItem]({icon: icons.Icons.task_alt, title: "Task Management", description: "Track your tasks and progress"}), C[38] || CT.C38, this[_buildFeatureItem]({icon: icons.Icons.bar_chart, title: "Statistics", description: "Monitor your productivity"})])})}), C[115] || CT.C115, new basic.Padding.new({padding: C[121] || CT.C121, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                          navigator.Navigator.of(context).pushReplacement(dart.dynamic, T.ObjectN(), new page.MaterialPageRoute.new({builder: dart.fn(context => C[122] || CT.C122, T.BuildContextToCountdownApp())}));
                        }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[7] || CT.C7, foregroundColor: colors.Colors.white, padding: C[123] || CT.C123, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(12)}), elevation: 0, minimumSize: C[124] || CT.C124}), child: C[125] || CT.C125}), C[62] || CT.C62, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new icon$.Icon.new(icons.Icons.verified, {size: 16, color: colors.Colors.white.withOpacity(0.7)}), C[15] || CT.C15, new text.Text.new("Developed by: Sourabh Chauhan", {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})})])})])})})])})})})});
    }
    [_buildFeatureItem](opts) {
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let description = opts && 'description' in opts ? opts.description : null;
      return new container.Container.new({padding: C[89] || CT.C89, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.05), borderRadius: new border_radius.BorderRadius.circular(12), border: box_border.Border.all({color: colors.Colors.white.withOpacity(0.1), width: 1})}), child: new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[127] || CT.C127, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white.withOpacity(0.1), borderRadius: new border_radius.BorderRadius.circular(8)}), child: new icon$.Icon.new(icon, {color: colors.Colors.white, size: 24})}), C[128] || CT.C128, new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(title, {style: C[103] || CT.C103}), C[129] || CT.C129, new text.Text.new(description, {style: new text_style.TextStyle.new({color: colors.Colors.white.withOpacity(0.7), fontSize: 14})})])})})])})});
    }
  };
  (main.HomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HomePage.prototype;
  dart.addTypeTests(main.HomePage);
  dart.addTypeCaches(main.HomePage);
  dart.setMethodSignature(main.HomePage, () => ({
    __proto__: dart.getMethods(main.HomePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildFeatureItem]: dart.fnType(framework.Widget, [], {}, {description: core.String, icon: icon_data.IconData, title: core.String})
  }));
  dart.setLibraryUri(main.HomePage, I[0]);
  main.main = function main$0() {
    binding.runApp(C[130] || CT.C130);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
